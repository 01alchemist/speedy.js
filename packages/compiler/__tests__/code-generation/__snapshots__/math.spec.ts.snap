// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Math math.sqrt 1`] = `
"; ModuleID = 'math/math.sqrt.ts'
source_filename = \\"math/math.sqrt.ts\\"
target datalayout = \\"e-m:e-p:32:32-i64:64-n32:64-S128\\"
target triple = \\"wasm32-unknown-unknown\\"

@Array_name = private unnamed_addr constant [6 x i8] c\\"Array\\\\00\\"
@Array_type_descriptor = private constant { [6 x i8]* } { [6 x i8]* @Array_name }
@Math_name = private unnamed_addr constant [5 x i8] c\\"Math\\\\00\\"
@Math_type_descriptor = private constant { [5 x i8]* } { [5 x i8]* @Math_name }
@Math_object = private constant { { [5 x i8]* }* } { { [5 x i8]* }* @Math_type_descriptor }
@Math_ptr = private constant { { [5 x i8]* }* }* @Math_object

define void @_mathSqrt() {
entry:
  %intValue = alloca i32
  %mathPtr = load { { [5 x i8]* }* }*, { { [5 x i8]* }* }** @Math_ptr, align 4
  %sqrtReturnValue = call double @Math_sqrtd(double 3.140000e+00)
  store i32 4, i32* %intValue, align 4
  %mathPtr1 = load { { [5 x i8]* }* }*, { { [5 x i8]* }* }** @Math_ptr, align 4
  %intValue2 = load i32, i32* %intValue, align 4
  %intValue2AsDouble = sitofp i32 %intValue2 to double
  %sqrtReturnValue3 = call double @Math_sqrtd(double %intValue2AsDouble)
  ret void
}

declare double @Math_sqrtd(double)
"
`;
